spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:reservation_service}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  docker:
    compose:
      enabled: false
      lifecycle-management: start-only
error:
  handling:
    http-status-in-json-response: true
    exception-logging: NO_LOGGING
    full-stacktrace-http-statuses: 5xx
    log-levels:
      5xx: ERROR
springdoc:
  pathsToMatch: /, /v1/**
flyway:
  url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:reservation_service}
  user: postgres
  password: postgres
  enabled: true
rabbitmq:
  host: ${RABBITMQ_HOST:localhost}
  port: ${RABBITMQ_PORT:5672}
  username: ${RABBITMQ_USERNAME:guest}
  password: ${RABBITMQ_PASSWORD:guest}
  exchange: reservation_exchange
  queue: reservation_queue
  routing-key: reservation_routing_key
  dlq:
    routing-key: reservation_dlq_routing_key
    queue: reservation_dlq_queue